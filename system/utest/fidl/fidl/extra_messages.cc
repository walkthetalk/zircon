// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

extern "C" {

extern const fidl_type_t fidl_test_coding_Uint8EnumTable;
extern const fidl_type_t fidl_test_coding_Uint8EnumStructTable;
extern const fidl_type_t fidl_test_coding_Uint64EnumTable;
extern const fidl_type_t fidl_test_coding_Uint64EnumStructTable;
extern const fidl_type_t fidl_test_coding_Uint32EnumTable;
extern const fidl_type_t fidl_test_coding_Uint32EnumStructTable;
extern const fidl_type_t fidl_test_coding_Uint16EnumTable;
extern const fidl_type_t fidl_test_coding_Uint16EnumStructTable;
extern const fidl_type_t fidl_test_coding_StructWithManyHandlesTable;
extern const fidl_type_t fidl_test_coding_SmallerTableOfStructWithHandleTable;
extern const fidl_type_t fidl_test_coding_StructWithHandleTable;
extern const fidl_type_t fidl_test_coding_TableOfStructWithHandleTable;
extern const fidl_type_t fidl_test_coding_IntStructTable;
extern const fidl_type_t fidl_test_coding_SimpleTableTable;
extern const fidl_type_t fidl_test_coding_SampleXUnionTable;
extern const fidl_type_t fidl_test_coding_SampleXUnionStructTable;
extern const fidl_type_t fidl_test_coding_SampleNullableXUnionStructTable;
extern const fidl_type_t fidl_test_coding_SampleStrictXUnionTable;
extern const fidl_type_t fidl_test_coding_SampleStrictXUnionStructTable;
extern const fidl_type_t fidl_test_coding_OlderSimpleTableTable;
extern const fidl_type_t fidl_test_coding_NewerSimpleTableTable;
extern const fidl_type_t fidl_test_coding_Int8EnumTable;
extern const fidl_type_t fidl_test_coding_Int8EnumStructTable;
extern const fidl_type_t fidl_test_coding_Int64EnumTable;
extern const fidl_type_t fidl_test_coding_Int64EnumStructTable;
extern const fidl_type_t fidl_test_coding_Int32EnumTable;
extern const fidl_type_t fidl_test_coding_Int32EnumStructTable;
extern const fidl_type_t fidl_test_coding_Int32BitsTable;
extern const fidl_type_t fidl_test_coding_Int32BitsStructTable;
extern const fidl_type_t fidl_test_coding_Int16EnumTable;
extern const fidl_type_t fidl_test_coding_Int16EnumStructTable;
extern const fidl_type_t fidl_test_coding_Int16BitsTable;
extern const fidl_type_t fidl_test_coding_Int16BitsStructTable;

static const fidl_type_t HandlehandlenonnullableTable =
    fidl_type_t(::fidl::FidlCodedHandle(ZX_OBJ_TYPE_NONE, ::fidl::kNonnullable));

static const fidl_type_t VectorHandlehandlenonnullable2nonnullableTable = fidl_type_t(
    ::fidl::FidlCodedVector(&HandlehandlenonnullableTable, 2u, 4u, ::fidl::kNonnullable));

static const fidl_type_t Vectoruint324294967295nonnullableTable =
    fidl_type_t(::fidl::FidlCodedVector(nullptr, 4294967295u, 4u, ::fidl::kNonnullable));

extern const fidl_type_t fidl_test_coding_LinearizerTestVectorOfUint32RequestTable;
static const ::fidl::FidlStructField fidl_test_coding_LinearizerTestVectorOfUint32RequestFields[] =
    {::fidl::FidlStructField(&Vectoruint324294967295nonnullableTable, 16u, 0u)};
const fidl_type_t fidl_test_coding_LinearizerTestVectorOfUint32RequestTable = fidl_type_t(
    ::fidl::FidlCodedStruct(fidl_test_coding_LinearizerTestVectorOfUint32RequestFields, 1u, 32u,
                            "fidl.test.coding/LinearizerTestVectorOfUint32Request"));

static const fidl_type_t String4294967295nonnullableTable =
    fidl_type_t(::fidl::FidlCodedString(4294967295u, ::fidl::kNonnullable));

static const fidl_type_t VectorString4294967295nonnullable4294967295nonnullableTable =
    fidl_type_t(::fidl::FidlCodedVector(&String4294967295nonnullableTable, 4294967295u, 16u,
                                        ::fidl::kNonnullable));

extern const fidl_type_t fidl_test_coding_LinearizerTestVectorOfStringRequestTable;
static const ::fidl::FidlStructField fidl_test_coding_LinearizerTestVectorOfStringRequestFields[] =
    {::fidl::FidlStructField(&VectorString4294967295nonnullable4294967295nonnullableTable, 16u,
                             0u)};
const fidl_type_t fidl_test_coding_LinearizerTestVectorOfStringRequestTable = fidl_type_t(
    ::fidl::FidlCodedStruct(fidl_test_coding_LinearizerTestVectorOfStringRequestFields, 1u, 32u,
                            "fidl.test.coding/LinearizerTestVectorOfStringRequest"));

static const ::fidl::FidlXUnionField fidl_test_coding_SampleXUnionNullableRefFields[] = {
    ::fidl::FidlXUnionField(&::fidl::internal::kInt32Table, 319709411u),
    ::fidl::FidlXUnionField(&fidl_test_coding_IntStructTable, 376675050u),
    ::fidl::FidlXUnionField(&fidl_test_coding_SimpleTableTable, 586453270u)};
const fidl_type_t fidl_test_coding_SampleXUnionNullableRefTable = fidl_type_t(
    ::fidl::FidlCodedXUnion(3u, fidl_test_coding_SampleXUnionNullableRefFields, ::fidl::kNullable,
                            "fidl.test.coding/SampleXUnion", ::fidl::kFlexible));

static constexpr bool EnumValidatorFor_fidl_test_coding_Uint8Enum(uint64_t v) {
  return (v == 0ul) || (v == 255ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Uint8EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kUint8, &EnumValidatorFor_fidl_test_coding_Uint8Enum));

static const ::fidl::FidlStructField fidl_test_coding_Uint8EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Uint8EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Uint8EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Uint8EnumStructFields, 1u, 1u, "fidl.test.coding/Uint8EnumStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Uint64Enum(uint64_t v) {
  return (v == 0ul) || (v == 18446744073709551615ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Uint64EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kUint64, &EnumValidatorFor_fidl_test_coding_Uint64Enum));

static const ::fidl::FidlStructField fidl_test_coding_Uint64EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Uint64EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Uint64EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Uint64EnumStructFields, 1u, 8u, "fidl.test.coding/Uint64EnumStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Uint32Enum(uint64_t v) {
  return (v == 0ul) || (v == 4294967295ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Uint32EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kUint32, &EnumValidatorFor_fidl_test_coding_Uint32Enum));

static const ::fidl::FidlStructField fidl_test_coding_Uint32EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Uint32EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Uint32EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Uint32EnumStructFields, 1u, 4u, "fidl.test.coding/Uint32EnumStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Uint16Enum(uint64_t v) {
  return (v == 0ul) || (v == 65535ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Uint16EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kUint16, &EnumValidatorFor_fidl_test_coding_Uint16Enum));

static const ::fidl::FidlStructField fidl_test_coding_Uint16EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Uint16EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Uint16EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Uint16EnumStructFields, 1u, 2u, "fidl.test.coding/Uint16EnumStruct"));

static const ::fidl::FidlStructField fidl_test_coding_StructWithManyHandlesFields[] = {
    ::fidl::FidlStructField(&HandlehandlenonnullableTable, 0u, 0u),
    ::fidl::FidlStructField(&HandlehandlenonnullableTable, 4u, 0u),
    ::fidl::FidlStructField(&VectorHandlehandlenonnullable2nonnullableTable, 8u, 0u)};
const fidl_type_t fidl_test_coding_StructWithManyHandlesTable =
    fidl_type_t(::fidl::FidlCodedStruct(fidl_test_coding_StructWithManyHandlesFields, 3u, 24u,
                                        "fidl.test.coding/StructWithManyHandles"));

static const ::fidl::FidlTableField fidl_test_coding_SmallerTableOfStructWithHandleFields[] = {
    ::fidl::FidlTableField(&fidl_test_coding_StructWithManyHandlesTable, 2u)};
const fidl_type_t fidl_test_coding_SmallerTableOfStructWithHandleTable =
    fidl_type_t(::fidl::FidlCodedTable(fidl_test_coding_SmallerTableOfStructWithHandleFields, 1u,
                                       "fidl.test.coding/SmallerTableOfStructWithHandle"));

static const ::fidl::FidlStructField fidl_test_coding_StructWithHandleFields[] = {
    ::fidl::FidlStructField(&HandlehandlenonnullableTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_StructWithHandleTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_StructWithHandleFields, 1u, 8u, "fidl.test.coding/StructWithHandle"));

static const ::fidl::FidlTableField fidl_test_coding_TableOfStructWithHandleFields[] = {
    ::fidl::FidlTableField(&fidl_test_coding_StructWithHandleTable, 1u),
    ::fidl::FidlTableField(&fidl_test_coding_StructWithManyHandlesTable, 2u)};
const fidl_type_t fidl_test_coding_TableOfStructWithHandleTable =
    fidl_type_t(::fidl::FidlCodedTable(fidl_test_coding_TableOfStructWithHandleFields, 2u,
                                       "fidl.test.coding/TableOfStructWithHandle"));

static const ::fidl::FidlStructField fidl_test_coding_IntStructFields[] = {};
const fidl_type_t fidl_test_coding_IntStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_IntStructFields, 0u, 8u, "fidl.test.coding/IntStruct"));

static const ::fidl::FidlTableField fidl_test_coding_SimpleTableFields[] = {
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 1u),
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 5u)};
const fidl_type_t fidl_test_coding_SimpleTableTable = fidl_type_t(
    ::fidl::FidlCodedTable(fidl_test_coding_SimpleTableFields, 2u, "fidl.test.coding/SimpleTable"));

static const ::fidl::FidlXUnionField fidl_test_coding_SampleXUnionFields[] = {
    ::fidl::FidlXUnionField(&::fidl::internal::kInt32Table, 319709411u),
    ::fidl::FidlXUnionField(&fidl_test_coding_IntStructTable, 376675050u),
    ::fidl::FidlXUnionField(&fidl_test_coding_SimpleTableTable, 586453270u)};
const fidl_type_t fidl_test_coding_SampleXUnionTable = fidl_type_t(
    ::fidl::FidlCodedXUnion(3u, fidl_test_coding_SampleXUnionFields, ::fidl::kNonnullable,
                            "fidl.test.coding/SampleXUnion", ::fidl::kFlexible));

static const ::fidl::FidlStructField fidl_test_coding_SampleXUnionStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_SampleXUnionTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_SampleXUnionStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_SampleXUnionStructFields, 1u, 24u, "fidl.test.coding/SampleXUnionStruct"));

static const ::fidl::FidlStructField fidl_test_coding_SampleNullableXUnionStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_SampleXUnionNullableRefTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_SampleNullableXUnionStructTable =
    fidl_type_t(::fidl::FidlCodedStruct(fidl_test_coding_SampleNullableXUnionStructFields, 1u, 24u,
                                        "fidl.test.coding/SampleNullableXUnionStruct"));

static const ::fidl::FidlXUnionField fidl_test_coding_SampleStrictXUnionFields[] = {
    ::fidl::FidlXUnionField(&::fidl::internal::kInt32Table, 419938224u),
    ::fidl::FidlXUnionField(&fidl_test_coding_SimpleTableTable, 915108668u),
    ::fidl::FidlXUnionField(&fidl_test_coding_IntStructTable, 1928460319u)};
const fidl_type_t fidl_test_coding_SampleStrictXUnionTable = fidl_type_t(
    ::fidl::FidlCodedXUnion(3u, fidl_test_coding_SampleStrictXUnionFields, ::fidl::kNonnullable,
                            "fidl.test.coding/SampleStrictXUnion", ::fidl::kStrict));

static const ::fidl::FidlStructField fidl_test_coding_SampleStrictXUnionStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_SampleStrictXUnionTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_SampleStrictXUnionStructTable =
    fidl_type_t(::fidl::FidlCodedStruct(fidl_test_coding_SampleStrictXUnionStructFields, 1u, 24u,
                                        "fidl.test.coding/SampleStrictXUnionStruct"));

static const ::fidl::FidlTableField fidl_test_coding_OlderSimpleTableFields[] = {
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 1u)};
const fidl_type_t fidl_test_coding_OlderSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(
    fidl_test_coding_OlderSimpleTableFields, 1u, "fidl.test.coding/OlderSimpleTable"));

static const ::fidl::FidlTableField fidl_test_coding_NewerSimpleTableFields[] = {
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 1u),
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 5u),
    ::fidl::FidlTableField(&fidl_test_coding_IntStructTable, 6u)};
const fidl_type_t fidl_test_coding_NewerSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(
    fidl_test_coding_NewerSimpleTableFields, 3u, "fidl.test.coding/NewerSimpleTable"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Int8Enum(uint64_t v) {
  return (v == 18446744073709551488ul) || (v == 127ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Int8EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kInt8, &EnumValidatorFor_fidl_test_coding_Int8Enum));

static const ::fidl::FidlStructField fidl_test_coding_Int8EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int8EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int8EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int8EnumStructFields, 1u, 1u, "fidl.test.coding/Int8EnumStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Int64Enum(uint64_t v) {
  return (v == 9223372036854775808ul) || (v == 9223372036854775807ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Int64EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kInt64, &EnumValidatorFor_fidl_test_coding_Int64Enum));

static const ::fidl::FidlStructField fidl_test_coding_Int64EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int64EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int64EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int64EnumStructFields, 1u, 8u, "fidl.test.coding/Int64EnumStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Int32Enum(uint64_t v) {
  return (v == 18446744071562067968ul) || (v == 2147483647ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Int32EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kInt32, &EnumValidatorFor_fidl_test_coding_Int32Enum));

static const ::fidl::FidlStructField fidl_test_coding_Int32EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int32EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int32EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int32EnumStructFields, 1u, 4u, "fidl.test.coding/Int32EnumStruct"));

const fidl_type_t fidl_test_coding_Int32BitsTable =
    fidl_type_t(::fidl::FidlCodedBits(::fidl::FidlCodedPrimitive::kUint32, 67110976ul));

static const ::fidl::FidlStructField fidl_test_coding_Int32BitsStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int32BitsTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int32BitsStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int32BitsStructFields, 1u, 4u, "fidl.test.coding/Int32BitsStruct"));

static constexpr bool EnumValidatorFor_fidl_test_coding_Int16Enum(uint64_t v) {
  return (v == 18446744073709518848ul) || (v == 32767ul) || (v == 42ul) || false;
}
const fidl_type_t fidl_test_coding_Int16EnumTable = fidl_type_t(::fidl::FidlCodedEnum(
    ::fidl::FidlCodedPrimitive::kInt16, &EnumValidatorFor_fidl_test_coding_Int16Enum));

static const ::fidl::FidlStructField fidl_test_coding_Int16EnumStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int16EnumTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int16EnumStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int16EnumStructFields, 1u, 2u, "fidl.test.coding/Int16EnumStruct"));

const fidl_type_t fidl_test_coding_Int16BitsTable =
    fidl_type_t(::fidl::FidlCodedBits(::fidl::FidlCodedPrimitive::kUint16, 21ul));

static const ::fidl::FidlStructField fidl_test_coding_Int16BitsStructFields[] = {
    ::fidl::FidlStructField(&fidl_test_coding_Int16BitsTable, 0u, 0u)};
const fidl_type_t fidl_test_coding_Int16BitsStructTable = fidl_type_t(::fidl::FidlCodedStruct(
    fidl_test_coding_Int16BitsStructFields, 1u, 2u, "fidl.test.coding/Int16BitsStruct"));

}  // extern "C"
